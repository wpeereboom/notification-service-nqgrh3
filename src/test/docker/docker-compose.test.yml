version: '3.8'

services:
  test-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: notification-test-app
    environment:
      - APP_ENV=testing
      - XDEBUG_MODE=coverage
      - TEST_DB_HOST=test-db
      - TEST_REDIS_HOST=test-redis
      - TEST_AWS_ENDPOINT=http://test-localstack:4566
      - PHP_IDE_CONFIG=serverName=docker
      - COMPOSER_ALLOW_SUPERUSER=1
    volumes:
      - ../../:/var/www/test:cached
      - ./Scripts:/var/www/test/Scripts:cached
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-localstack:
        condition: service_healthy
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  test-db:
    image: postgres:14-alpine
    container_name: notification-test-db
    environment:
      - POSTGRES_DB=notification_test
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d notification_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  test-redis:
    image: redis:7-alpine
    container_name: notification-test-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_test_data:/data
    ports:
      - "6380:6379"
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  test-localstack:
    image: localstack/localstack:latest
    container_name: notification-test-localstack
    environment:
      - SERVICES=sqs,sns,s3
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LS_LOG=warn
      - PERSISTENCE=1
    volumes:
      - localstack_test_data:/tmp/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "4566:4566"
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

volumes:
  postgres_test_data:
    name: notification_test_postgres_data
  redis_test_data:
    name: notification_test_redis_data
  localstack_test_data:
    name: notification_test_localstack_data

networks:
  test_network:
    name: notification_test_network
    driver: bridge